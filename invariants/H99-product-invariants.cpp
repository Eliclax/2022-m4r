#include<bits/stdc++.h>
using namespace std;

int elt[225][9] = {{0,2,1,6,8,7,3,5,4},{0,2,1,6,8,7,4,3,5},{0,2,1,7,6,8,3,5,4},{0,2,1,7,6,8,4,3,5},{0,2,4,6,8,1,3,5,7},{0,2,4,7,1,8,5,3,6},{0,2,4,8,7,3,1,6,5},{0,2,5,1,8,7,3,6,4},{0,2,5,7,1,3,8,6,4},{0,2,5,7,1,4,8,3,6},{0,2,5,7,3,1,8,4,6},{0,2,5,8,1,7,4,6,3},{0,2,5,8,3,7,1,4,6},{0,2,5,8,6,3,1,4,7},{0,2,6,1,7,4,8,3,5},{0,2,6,5,1,8,4,3,7},{0,2,6,8,3,7,4,1,5},{0,2,6,8,7,3,5,4,1},{0,2,6,8,7,4,3,5,1},{0,2,7,1,6,8,5,4,3},{0,2,7,5,1,8,4,6,3},{0,2,7,5,3,8,1,4,6},{0,2,7,5,8,4,3,1,6},{0,2,7,6,1,4,8,5,3},{0,2,7,6,8,3,5,4,1},{0,2,7,6,8,4,3,5,1},{0,2,8,5,7,1,4,6,3},{0,2,8,5,7,3,1,6,4},{0,2,8,5,7,4,1,3,6},{0,2,8,6,3,7,1,5,4},{0,2,8,7,6,3,5,1,4},{0,3,1,6,8,2,7,5,4},{0,3,1,7,5,8,2,4,6},{0,3,1,8,7,6,4,2,5},{0,3,5,1,8,2,7,6,4},{0,3,5,1,8,6,2,4,7},{0,3,5,2,8,1,7,4,6},{0,3,5,7,1,4,2,8,6},{0,3,5,8,1,4,7,2,6},{0,3,5,8,1,6,4,2,7},{0,3,5,8,2,6,1,4,7},{0,3,6,1,5,8,2,4,7},{0,3,6,1,7,2,5,8,4},{0,3,6,1,7,4,2,8,5},{0,3,6,2,1,8,7,5,4},{0,3,6,2,7,1,4,8,5},{0,3,6,4,1,8,2,5,7},{0,3,6,8,1,4,7,5,2},{0,3,6,8,2,4,7,1,5},{0,3,6,8,5,2,4,1,7},{0,3,7,1,8,6,5,4,2},{0,3,7,2,5,8,1,4,6},{0,3,7,2,8,6,4,1,5},{0,3,7,4,1,8,5,2,6},{0,3,7,4,2,8,1,6,5},{0,3,7,4,8,2,5,1,6},{0,3,7,6,2,4,1,8,5},{0,3,8,1,7,6,5,2,4},{0,3,8,2,7,6,1,5,4},{0,3,8,4,7,1,5,2,6},{0,3,8,6,5,1,4,2,7},{0,3,8,7,2,6,5,1,4},{0,3,8,7,5,1,4,6,2},{0,3,8,7,5,4,2,1,6},{0,4,1,5,8,2,7,3,6},{0,4,1,7,2,6,8,3,5},{0,4,1,7,5,2,8,3,6},{0,4,1,7,6,3,2,8,5},{0,4,1,8,5,7,3,2,6},{0,4,1,8,6,2,7,5,3},{0,4,1,8,6,3,7,2,5},{0,4,3,1,8,7,2,6,5},{0,4,3,7,2,1,8,6,5},{0,4,3,8,1,7,5,2,6},{0,4,3,8,2,7,1,6,5},{0,4,3,8,6,2,1,5,7},{0,4,6,1,3,7,2,8,5},{0,4,6,1,5,2,8,3,7},{0,4,6,5,1,3,2,8,7},{0,4,6,5,2,1,3,8,7},{0,4,6,8,3,2,7,5,1},{0,4,7,1,3,6,8,2,5},{0,4,7,1,5,2,8,6,3},{0,4,7,1,6,2,5,8,3},{0,4,7,2,1,6,8,5,3},{0,4,7,2,6,3,1,8,5},{0,4,7,2,8,6,3,5,1},{0,4,7,5,3,2,1,8,6},{0,4,8,1,5,7,2,6,3},{0,4,8,2,5,7,1,3,6},{0,4,8,2,6,1,7,5,3},{0,4,8,5,2,1,7,6,3},{0,4,8,5,2,6,1,3,7},{0,4,8,5,3,1,7,2,6},{0,4,8,7,2,6,5,3,1},{0,4,8,7,3,6,2,5,1},{0,4,8,7,5,3,2,6,1},{0,5,1,4,7,2,8,3,6},{0,5,1,6,2,7,3,8,4},{0,5,1,8,6,3,7,4,2},{0,5,3,1,6,8,2,4,7},{0,5,3,1,7,2,8,6,4},{0,5,3,2,7,1,8,4,6},{0,5,3,6,2,1,8,4,7},{0,5,3,8,1,7,4,6,2},{0,5,3,8,6,2,4,1,7},{0,5,3,8,7,2,4,6,1},{0,5,4,2,1,8,7,3,6},{0,5,4,2,7,1,3,8,6},{0,5,4,6,1,3,2,8,7},{0,5,4,6,2,1,3,8,7},{0,5,4,8,1,3,7,6,2},{0,5,4,8,2,6,3,1,7},{0,5,4,8,3,2,7,1,6},{0,5,7,1,3,6,8,4,2},{0,5,7,1,6,4,3,8,2},{0,5,7,4,1,3,8,6,2},{0,5,7,4,2,8,3,6,1},{0,5,7,4,3,2,8,1,6},{0,5,7,6,2,4,3,8,1},{0,5,7,6,3,2,4,8,1},{0,5,8,1,6,4,7,3,2},{0,5,8,2,6,3,7,1,4},{0,5,8,2,7,6,4,3,1},{0,5,8,4,3,7,2,1,6},{0,5,8,4,6,3,2,1,7},{0,5,8,4,7,3,2,6,1},{0,5,8,6,2,4,7,3,1},{0,6,1,4,7,2,8,5,3},{0,6,1,4,7,3,8,2,5},{0,6,1,4,8,7,3,5,2},{0,6,1,5,2,8,7,4,3},{0,6,1,5,7,2,4,8,3},{0,6,1,5,8,3,7,4,2},{0,6,1,7,5,3,8,4,2},{0,6,3,1,7,4,8,2,5},{0,6,3,1,8,7,5,4,2},{0,6,3,2,8,7,4,1,5},{0,6,3,5,1,8,4,2,7},{0,6,3,5,2,8,1,4,7},{0,6,3,5,8,2,4,1,7},{0,6,3,7,1,4,8,5,2},{0,6,3,7,2,4,8,1,5},{0,6,3,7,2,8,5,4,1},{0,6,4,1,3,8,7,2,5},{0,6,4,1,5,8,3,2,7},{0,6,4,1,7,2,5,8,3},{0,6,4,2,1,8,7,5,3},{0,6,4,2,7,3,1,8,5},{0,6,4,2,8,3,7,1,5},{0,6,4,7,1,3,5,8,2},{0,6,5,2,1,7,4,8,3},{0,6,5,2,8,3,7,4,1},{0,6,5,4,1,3,8,2,7},{0,6,5,7,2,4,3,8,1},{0,6,5,7,3,2,4,8,1},{0,6,8,2,5,7,4,1,3},{0,6,8,4,2,7,5,1,3},{0,6,8,4,3,7,1,5,2},{0,6,8,4,7,3,5,2,1},{0,6,8,5,2,4,7,1,3},{0,7,1,4,6,8,2,5,3},{0,7,1,5,8,6,4,3,2},{0,7,1,6,5,3,8,2,4},{0,7,3,1,6,8,5,2,4},{0,7,3,2,6,8,1,5,4},{0,7,3,5,2,8,1,6,4},{0,7,3,5,8,1,4,6,2},{0,7,3,5,8,4,2,1,6},{0,7,3,6,8,4,2,5,1},{0,7,3,8,6,4,1,5,2},{0,7,4,1,5,8,2,6,3},{0,7,4,1,8,6,5,3,2},{0,7,4,2,5,8,1,3,6},{0,7,4,6,2,1,5,8,3},{0,7,4,8,2,6,5,1,3},{0,7,4,8,3,6,1,5,2},{0,7,4,8,5,3,1,6,2},{0,7,5,1,3,6,8,2,4},{0,7,5,1,6,4,2,8,3},{0,7,5,2,6,1,4,8,3},{0,7,5,2,6,3,1,8,4},{0,7,5,2,8,6,4,3,1},{0,7,5,4,2,1,8,6,3},{0,7,5,4,3,1,8,2,6},{0,7,5,4,8,3,2,6,1},{0,7,5,8,3,6,4,2,1},{0,7,6,1,5,4,8,3,2},{0,7,6,2,5,3,8,1,4},{0,7,6,2,5,8,4,3,1},{0,7,6,4,2,8,5,3,1},{0,7,6,4,3,1,8,5,2},{0,7,6,4,3,8,2,5,1},{0,7,6,5,3,1,4,8,2},{0,8,1,5,7,6,2,4,3},{0,8,1,5,7,6,3,2,4},{0,8,1,6,5,7,2,4,3},{0,8,1,6,5,7,3,2,4},{0,8,3,5,7,2,1,6,4},{0,8,3,6,1,7,5,2,4},{0,8,3,7,6,1,5,4,2},{0,8,3,7,6,2,5,1,4},{0,8,3,7,6,4,2,1,5},{0,8,4,2,7,6,1,3,5},{0,8,4,6,3,1,7,2,5},{0,8,4,6,5,1,3,2,7},{0,8,4,6,5,2,1,3,7},{0,8,4,7,1,6,5,3,2},{0,8,4,7,3,6,2,1,5},{0,8,4,7,5,1,3,6,2},{0,8,5,2,6,1,7,4,3},{0,8,5,4,1,7,2,6,3},{0,8,5,4,6,1,3,2,7},{0,8,5,4,6,2,1,3,7},{0,8,5,7,3,6,2,4,1},{0,8,6,2,5,7,3,1,4},{0,8,6,4,1,7,5,3,2},{0,8,6,4,3,7,2,1,5},{0,8,6,4,7,2,5,3,1},{0,8,6,5,1,4,7,3,2},{0,8,6,5,3,1,7,4,2},{0,8,6,5,3,2,7,1,4},{0,8,7,4,6,2,5,1,3},{0,8,7,5,3,6,1,4,2},{0,8,7,6,5,4,3,2,1}};


int grid[3][9];

void product_invariant()
{
    int product[3][9], sum[3], colsum[9];
    for (int i = 0; i < 3; i++) //for each row
    {
        sum[i] = 0;
        for (int j = 0; j < 9; j++) //for each column
        {
            product[i][j] = 1;
            for (int l = 1; l < 3; l++) //for each of the other two rows, multiply differences together.
            {
                product[i][j] *= (((grid[(i+l)%3][j]-grid[i][j])%9)+9)%9;
            }
            sum[i] += product[i][j];
        }
    }
    for (int i = 0; i < 9; i++)
    {
        cout << grid[2][i];
    }
    cout << endl;
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 9; j++)
        {
            cout << product[i][j] << '\t';
        }
        cout << sum[i] << endl;
    }
    for (int i = 0; i < 9; i++)
    {
        colsum[i] = product[0][i] + product[1][i] + product[2][i];
        cout << colsum[i] << '\t';
    }
    cout << endl << endl;
}

int main()
{
    for (int i = 0; i < 9; i++)
    {
        grid[0][i] = 0;
        grid[1][i] = i;
    }
    for (int i = 0; i < 225; i++)
    {
        for (int j = 0; j < 9; j++)
        {
            grid[2][j] = elt[i][j];
        }
        product_invariant();
    }
}
